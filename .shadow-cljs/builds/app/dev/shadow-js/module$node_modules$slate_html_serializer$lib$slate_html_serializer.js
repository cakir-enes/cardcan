["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/slate-html-serializer/lib/slate-html-serializer.js"],"~:js","shadow$provide.module$node_modules$slate_html_serializer$lib$slate_html_serializer=function(global,require,module,exports){function _interopDefault(ex){return ex&&\"object\"===typeof ex&&\"default\"in ex?ex[\"default\"]:ex}function defaultParseHtml(html){if(\"undefined\"==typeof DOMParser)throw Error(\"The native `DOMParser` global which the `Html` serializer uses by default is not present in this environment. You must supply the `options.parseHtml` function instead.\");return(new DOMParser).parseFromString(html,\n\"text/html\").body||window.document.createElement(\"body\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"module$node_modules$react$index\")),server=require(\"module$node_modules$react_dom$server_browser\"),typeOf=_interopDefault(require(\"module$node_modules$type_of$index\")),slate=require(\"module$node_modules$slate$lib$slate\");global=require(\"module$node_modules$immutable$dist$immutable\");var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=\narguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},toConsumableArray=function(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)},String=new global.Record({object:\"string\",text:\"\"}),TEXT_RULE={deserialize:function(el){if(el.tagName&&\"br\"===el.tagName.toLowerCase())return{object:\"text\",text:\"\\n\",marks:[]};if(\"#text\"===el.nodeName)return el.nodeValue&&\nel.nodeValue.match(/\\x3c!--.*?--\\x3e/)?void 0:{object:\"text\",text:el.nodeValue,marks:[]}},serialize:function(obj,children){if(\"string\"===obj.object)return children.split(\"\\n\").reduce(function(array,text,i){0!==i&&array.push(React.createElement(\"br\",{key:i}));array.push(text);return array},[])}},_initialiseProps=function(){var _this=this;this.deserialize=function(html){var _options$toJSON=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:{}).toJSON;_options$toJSON=void 0===_options$toJSON?!1:\n_options$toJSON;var defaultBlock=_this.defaultBlock,parseHtml=_this.parseHtml;parseHtml=parseHtml(html);parseHtml=Array.from(parseHtml.childNodes);parseHtml=_this.deserializeElements(parseHtml);parseHtml=parseHtml.reduce(function(memo,node,i,original){if(\"block\"===node.object)return memo.push(node),memo;if(0<i&&\"block\"!==original[i-1].object)return memo[memo.length-1].nodes.push(node),memo;node=_extends({object:\"block\",data:{}},defaultBlock,{nodes:[node]});memo.push(node);return memo},[]);0===parseHtml.length&&\n(parseHtml=[_extends({object:\"block\",data:{}},defaultBlock,{nodes:[{object:\"text\",text:\"\",marks:[]}]})]);parseHtml={object:\"value\",document:{object:\"document\",data:{},nodes:parseHtml}};return _options$toJSON?parseHtml:slate.Value.fromJSON(parseHtml)};this.deserializeElements=function(){var nodes=[];(0<arguments.length&&void 0!==arguments[0]?arguments[0]:[]).filter(_this.cruftNewline).forEach(function(element){element=_this.deserializeElement(element);switch(typeOf(element)){case \"array\":nodes=nodes.concat(element);\nbreak;case \"object\":nodes.push(element)}});return nodes};this.deserializeElement=function(element){var node=void 0;element.tagName||(element.tagName=\"\");var next=function(elements){\"[object NodeList]\"===Object.prototype.toString.call(elements)&&(elements=Array.from(elements));switch(typeOf(elements)){case \"array\":return _this.deserializeElements(elements);case \"object\":return _this.deserializeElement(elements);case \"null\":case \"undefined\":break;default:throw Error('The `next` argument was called with invalid children: \"'+\nelements+'\".');}},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=_this.rules[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var rule=_step.value;if(rule.deserialize){var ret=rule.deserialize(element,next),type=typeOf(ret);if(\"array\"!==type&&\"object\"!==type&&\"null\"!==type&&\"undefined\"!==type)throw Error('A rule returned an invalid deserialized representation: \"'+node+'\".');if(void 0!==\nret){if(null===ret)return null;node=\"mark\"===ret.object?_this.deserializeMark(ret):ret;\"block\"===node.object||\"inline\"===node.object?(node.data=node.data||{},node.nodes=node.nodes||[]):\"text\"===node.object&&(node.marks=node.marks||[],node.text=node.text||\"\");break}}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}return node||next(element.childNodes)};this.deserializeMark=\nfunction(mark){var type=mark.type,data=mark.data,applyMark=function applyMark(node){if(\"mark\"===node.object)return _this.deserializeMark(node);\"text\"===node.object?(node.marks=node.marks||[],node.marks.push({type:type,data:data})):node.nodes&&(node.nodes=node.nodes.map(applyMark));return node};return mark.nodes.reduce(function(nodes,node){node=applyMark(node);if(Array.isArray(node))return nodes.concat(node);nodes.push(node);return nodes},[])};this.serialize=function(value){var options=1<arguments.length&&\nvoid 0!==arguments[1]?arguments[1]:{},elements=value.document.nodes.map(_this.serializeNode).filter(function(el){return el});return!1===options.render?elements:server.renderToStaticMarkup(React.createElement(\"body\",null,elements)).slice(6,-7)};this.serializeNode=function(node){if(\"text\"===node.object){var string=new String({text:node.text});string=_this.serializeString(string);return node.marks.reduce(function(children,mark){var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=\nvoid 0;try{for(var _iterator2=_this.rules[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){var rule=_step2.value;if(rule.serialize){var ret=rule.serialize(mark,children);if(null===ret)return;if(ret)return React.cloneElement(ret,{key:key$jscomp$0++})}}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2;\n}}throw Error('No serializer defined for mark of type \"'+mark.type+'\".');},string)}string=node.nodes.map(_this.serializeNode);var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _iterator3=_this.rules[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){var rule$jscomp$0=_step3.value;if(rule$jscomp$0.serialize){var ret$jscomp$0=rule$jscomp$0.serialize(node,string);if(null===ret$jscomp$0)return;\nif(ret$jscomp$0)return React.cloneElement(ret$jscomp$0,{key:key$jscomp$0++})}}}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{!_iteratorNormalCompletion3&&_iterator3.return&&_iterator3.return()}finally{if(_didIteratorError3)throw _iteratorError3;}}throw Error('No serializer defined for node of type \"'+node.type+'\".');};this.serializeString=function(string){var _iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _iterator4=_this.rules[Symbol.iterator](),\n_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var rule=_step4.value;if(rule.serialize){var ret=rule.serialize(string,string.text);if(ret)return ret}}}catch(err){_didIteratorError4=!0,_iteratorError4=err}finally{try{!_iteratorNormalCompletion4&&_iterator4.return&&_iterator4.return()}finally{if(_didIteratorError4)throw _iteratorError4;}}};this.cruftNewline=function(element){return!(\"#text\"===element.nodeName&&\"\\n\"===element.nodeValue)}},key$jscomp$0=\n0;exports.default=function Html(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(!(this instanceof Html))throw new TypeError(\"Cannot call a class as a function\");_initialiseProps.call(this);var _options$defaultBlock=options.defaultBlock,_options$parseHtml=options.parseHtml;_options$parseHtml=void 0===_options$parseHtml?defaultParseHtml:_options$parseHtml;options=options.rules;options=void 0===options?[]:options;_options$defaultBlock=slate.Node.createProperties(void 0===_options$defaultBlock?\n\"paragraph\":_options$defaultBlock);this.rules=[].concat(toConsumableArray(options),[TEXT_RULE]);this.defaultBlock=_options$defaultBlock;this.parseHtml=_options$parseHtml}}","~:source","shadow$provide[\"module$node_modules$slate_html_serializer$lib$slate_html_serializer\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = _interopDefault(require('react'));\nvar server = require('react-dom/server');\nvar typeOf = _interopDefault(require('type-of'));\nvar slate = require('slate');\nvar immutable = require('immutable');\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * String.\n *\n * @type {String}\n */\n\nvar String = new immutable.Record({\n  object: 'string',\n  text: ''\n});\n\n/**\n * A rule to (de)serialize text nodes. This is automatically added to the HTML\n * serializer so that users don't have to worry about text-level serialization.\n *\n * @type {Object}\n */\n\nvar TEXT_RULE = {\n  deserialize: function deserialize(el) {\n    if (el.tagName && el.tagName.toLowerCase() === 'br') {\n      return {\n        object: 'text',\n        text: '\\n',\n        marks: []\n      };\n    }\n\n    if (el.nodeName === '#text') {\n      if (el.nodeValue && el.nodeValue.match(/<!--.*?-->/)) return;\n\n      return {\n        object: 'text',\n        text: el.nodeValue,\n        marks: []\n      };\n    }\n  },\n  serialize: function serialize(obj, children) {\n    if (obj.object === 'string') {\n      return children.split('\\n').reduce(function (array, text, i) {\n        if (i !== 0) array.push(React.createElement('br', { key: i }));\n        array.push(text);\n        return array;\n      }, []);\n    }\n  }\n};\n\n/**\n * A default `parseHtml` function that returns the `<body>` using `DOMParser`.\n *\n * @param {String} html\n * @return {Object}\n */\n\nfunction defaultParseHtml(html) {\n  if (typeof DOMParser == 'undefined') {\n    throw new Error('The native `DOMParser` global which the `Html` serializer uses by default is not present in this environment. You must supply the `options.parseHtml` function instead.');\n  }\n\n  var parsed = new DOMParser().parseFromString(html, 'text/html');\n  var body = parsed.body;\n  // COMPAT: in IE 11 body is null if html is an empty string\n\n  return body || window.document.createElement('body');\n}\n\n/**\n * HTML serializer.\n *\n * @type {Html}\n */\n\nvar Html =\n/**\n * Create a new serializer with `rules`.\n *\n * @param {Object} options\n *   @property {Array} rules\n *   @property {String|Object|Block} defaultBlock\n *   @property {Function} parseHtml\n */\n\nfunction Html() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  classCallCheck(this, Html);\n\n  _initialiseProps.call(this);\n\n  var _options$defaultBlock = options.defaultBlock,\n      defaultBlock = _options$defaultBlock === undefined ? 'paragraph' : _options$defaultBlock,\n      _options$parseHtml = options.parseHtml,\n      parseHtml = _options$parseHtml === undefined ? defaultParseHtml : _options$parseHtml,\n      _options$rules = options.rules,\n      rules = _options$rules === undefined ? [] : _options$rules;\n\n\n  defaultBlock = slate.Node.createProperties(defaultBlock);\n\n  this.rules = [].concat(toConsumableArray(rules), [TEXT_RULE]);\n  this.defaultBlock = defaultBlock;\n  this.parseHtml = parseHtml;\n};\n\n/**\n * Add a unique key to a React `element`.\n *\n * @param {Element} element\n * @return {Element}\n */\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.deserialize = function (html) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$toJSON = options.toJSON,\n        toJSON = _options$toJSON === undefined ? false : _options$toJSON;\n    var defaultBlock = _this.defaultBlock,\n        parseHtml = _this.parseHtml;\n\n    var fragment = parseHtml(html);\n    var children = Array.from(fragment.childNodes);\n    var nodes = _this.deserializeElements(children);\n\n    // COMPAT: ensure that all top-level inline nodes are wrapped into a block.\n    nodes = nodes.reduce(function (memo, node, i, original) {\n      if (node.object === 'block') {\n        memo.push(node);\n        return memo;\n      }\n\n      if (i > 0 && original[i - 1].object !== 'block') {\n        var _block = memo[memo.length - 1];\n        _block.nodes.push(node);\n        return memo;\n      }\n\n      var block = _extends({\n        object: 'block',\n        data: {}\n      }, defaultBlock, {\n        nodes: [node]\n      });\n\n      memo.push(block);\n      return memo;\n    }, []);\n\n    // TODO: pretty sure this is no longer needed.\n    if (nodes.length === 0) {\n      nodes = [_extends({\n        object: 'block',\n        data: {}\n      }, defaultBlock, {\n        nodes: [{\n          object: 'text',\n          text: '',\n          marks: []\n        }]\n      })];\n    }\n\n    var json = {\n      object: 'value',\n      document: {\n        object: 'document',\n        data: {},\n        nodes: nodes\n      }\n    };\n\n    var ret = toJSON ? json : slate.Value.fromJSON(json);\n    return ret;\n  };\n\n  this.deserializeElements = function () {\n    var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var nodes = [];\n\n    elements.filter(_this.cruftNewline).forEach(function (element) {\n      var node = _this.deserializeElement(element);\n\n      switch (typeOf(node)) {\n        case 'array':\n          nodes = nodes.concat(node);\n          break;\n        case 'object':\n          nodes.push(node);\n          break;\n      }\n    });\n\n    return nodes;\n  };\n\n  this.deserializeElement = function (element) {\n    var node = void 0;\n\n    if (!element.tagName) {\n      element.tagName = '';\n    }\n\n    var next = function next(elements) {\n      if (Object.prototype.toString.call(elements) === '[object NodeList]') {\n        elements = Array.from(elements);\n      }\n\n      switch (typeOf(elements)) {\n        case 'array':\n          return _this.deserializeElements(elements);\n        case 'object':\n          return _this.deserializeElement(elements);\n        case 'null':\n        case 'undefined':\n          return;\n        default:\n          throw new Error('The `next` argument was called with invalid children: \"' + elements + '\".');\n      }\n    };\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var rule = _step.value;\n\n        if (!rule.deserialize) continue;\n        var ret = rule.deserialize(element, next);\n        var type = typeOf(ret);\n\n        if (type !== 'array' && type !== 'object' && type !== 'null' && type !== 'undefined') {\n          throw new Error('A rule returned an invalid deserialized representation: \"' + node + '\".');\n        }\n\n        if (ret === undefined) {\n          continue;\n        } else if (ret === null) {\n          return null;\n        } else if (ret.object === 'mark') {\n          node = _this.deserializeMark(ret);\n        } else {\n          node = ret;\n        }\n\n        if (node.object === 'block' || node.object === 'inline') {\n          node.data = node.data || {};\n          node.nodes = node.nodes || [];\n        } else if (node.object === 'text') {\n          node.marks = node.marks || [];\n          node.text = node.text || '';\n        }\n\n        break;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return node || next(element.childNodes);\n  };\n\n  this.deserializeMark = function (mark) {\n    var type = mark.type,\n        data = mark.data;\n\n\n    var applyMark = function applyMark(node) {\n      if (node.object === 'mark') {\n        var ret = _this.deserializeMark(node);\n        return ret;\n      } else if (node.object === 'text') {\n        node.marks = node.marks || [];\n        node.marks.push({ type: type, data: data });\n      } else if (node.nodes) {\n        node.nodes = node.nodes.map(applyMark);\n      }\n\n      return node;\n    };\n\n    return mark.nodes.reduce(function (nodes, node) {\n      var ret = applyMark(node);\n      if (Array.isArray(ret)) return nodes.concat(ret);\n      nodes.push(ret);\n      return nodes;\n    }, []);\n  };\n\n  this.serialize = function (value) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var document = value.document;\n\n    var elements = document.nodes.map(_this.serializeNode).filter(function (el) {\n      return el;\n    });\n    if (options.render === false) return elements;\n\n    var html = server.renderToStaticMarkup(React.createElement(\n      'body',\n      null,\n      elements\n    ));\n    var inner = html.slice(6, -7);\n    return inner;\n  };\n\n  this.serializeNode = function (node) {\n    if (node.object === 'text') {\n      var string = new String({ text: node.text });\n      var text = _this.serializeString(string);\n\n      return node.marks.reduce(function (children, mark) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var rule = _step2.value;\n\n            if (!rule.serialize) continue;\n            var ret = rule.serialize(mark, children);\n            if (ret === null) return;\n            if (ret) return addKey(ret);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        throw new Error('No serializer defined for mark of type \"' + mark.type + '\".');\n      }, text);\n    }\n\n    var children = node.nodes.map(_this.serializeNode);\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = _this.rules[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var rule = _step3.value;\n\n        if (!rule.serialize) continue;\n        var ret = rule.serialize(node, children);\n        if (ret === null) return;\n        if (ret) return addKey(ret);\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    throw new Error('No serializer defined for node of type \"' + node.type + '\".');\n  };\n\n  this.serializeString = function (string) {\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = _this.rules[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var rule = _step4.value;\n\n        if (!rule.serialize) continue;\n        var ret = rule.serialize(string, string.text);\n        if (ret) return ret;\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  };\n\n  this.cruftNewline = function (element) {\n    return !(element.nodeName === '#text' && element.nodeValue === '\\n');\n  };\n};\n\nvar key = 0;\n\nfunction addKey(element) {\n  return React.cloneElement(element, { key: key++ });\n}\n\nexports.default = Html;\n//# sourceMappingURL=slate-html-serializer.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$immutable$dist$immutable","~$module$node_modules$slate$lib$slate","~$module$node_modules$react_dom$server_browser","~$module$node_modules$type_of$index"]],"~:properties",["^5",["object","serialize","key","__esModule","parseHtml","marks","serializeString","document","value","serializeNode","rules","text","nodes","type","defaultBlock","tagName","deserializeMark","cruftNewline","deserializeElements","data","default","deserialize","deserializeElement"]],"~:compiled-at",1574889105400,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$slate_html_serializer$lib$slate_html_serializer.js\",\n\"lineCount\":17,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/slate-html-serializer/lib/slate-html-serializer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$slate_html_serializer$lib$slate_html_serializer\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\\n\\nvar React = _interopDefault(require('react'));\\nvar server = require('react-dom/server');\\nvar typeOf = _interopDefault(require('type-of'));\\nvar slate = require('slate');\\nvar immutable = require('immutable');\\n\\nvar classCallCheck = function (instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n};\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar _extends = Object.assign || function (target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i];\\n\\n    for (var key in source) {\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\n        target[key] = source[key];\\n      }\\n    }\\n  }\\n\\n  return target;\\n};\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar toConsumableArray = function (arr) {\\n  if (Array.isArray(arr)) {\\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\\n\\n    return arr2;\\n  } else {\\n    return Array.from(arr);\\n  }\\n};\\n\\n/**\\n * String.\\n *\\n * @type {String}\\n */\\n\\nvar String = new immutable.Record({\\n  object: 'string',\\n  text: ''\\n});\\n\\n/**\\n * A rule to (de)serialize text nodes. This is automatically added to the HTML\\n * serializer so that users don't have to worry about text-level serialization.\\n *\\n * @type {Object}\\n */\\n\\nvar TEXT_RULE = {\\n  deserialize: function deserialize(el) {\\n    if (el.tagName && el.tagName.toLowerCase() === 'br') {\\n      return {\\n        object: 'text',\\n        text: '\\\\n',\\n        marks: []\\n      };\\n    }\\n\\n    if (el.nodeName === '#text') {\\n      if (el.nodeValue && el.nodeValue.match(/\\u003c!--.*?--\\u003e/)) return;\\n\\n      return {\\n        object: 'text',\\n        text: el.nodeValue,\\n        marks: []\\n      };\\n    }\\n  },\\n  serialize: function serialize(obj, children) {\\n    if (obj.object === 'string') {\\n      return children.split('\\\\n').reduce(function (array, text, i) {\\n        if (i !== 0) array.push(React.createElement('br', { key: i }));\\n        array.push(text);\\n        return array;\\n      }, []);\\n    }\\n  }\\n};\\n\\n/**\\n * A default `parseHtml` function that returns the `<body>` using `DOMParser`.\\n *\\n * @param {String} html\\n * @return {Object}\\n */\\n\\nfunction defaultParseHtml(html) {\\n  if (typeof DOMParser == 'undefined') {\\n    throw new Error('The native `DOMParser` global which the `Html` serializer uses by default is not present in this environment. You must supply the `options.parseHtml` function instead.');\\n  }\\n\\n  var parsed = new DOMParser().parseFromString(html, 'text/html');\\n  var body = parsed.body;\\n  // COMPAT: in IE 11 body is null if html is an empty string\\n\\n  return body || window.document.createElement('body');\\n}\\n\\n/**\\n * HTML serializer.\\n *\\n * @type {Html}\\n */\\n\\nvar Html =\\n/**\\n * Create a new serializer with `rules`.\\n *\\n * @param {Object} options\\n *   @property {Array} rules\\n *   @property {String|Object|Block} defaultBlock\\n *   @property {Function} parseHtml\\n */\\n\\nfunction Html() {\\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n  classCallCheck(this, Html);\\n\\n  _initialiseProps.call(this);\\n\\n  var _options$defaultBlock = options.defaultBlock,\\n      defaultBlock = _options$defaultBlock === undefined ? 'paragraph' : _options$defaultBlock,\\n      _options$parseHtml = options.parseHtml,\\n      parseHtml = _options$parseHtml === undefined ? defaultParseHtml : _options$parseHtml,\\n      _options$rules = options.rules,\\n      rules = _options$rules === undefined ? [] : _options$rules;\\n\\n\\n  defaultBlock = slate.Node.createProperties(defaultBlock);\\n\\n  this.rules = [].concat(toConsumableArray(rules), [TEXT_RULE]);\\n  this.defaultBlock = defaultBlock;\\n  this.parseHtml = parseHtml;\\n};\\n\\n/**\\n * Add a unique key to a React `element`.\\n *\\n * @param {Element} element\\n * @return {Element}\\n */\\n\\nvar _initialiseProps = function _initialiseProps() {\\n  var _this = this;\\n\\n  this.deserialize = function (html) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    var _options$toJSON = options.toJSON,\\n        toJSON = _options$toJSON === undefined ? false : _options$toJSON;\\n    var defaultBlock = _this.defaultBlock,\\n        parseHtml = _this.parseHtml;\\n\\n    var fragment = parseHtml(html);\\n    var children = Array.from(fragment.childNodes);\\n    var nodes = _this.deserializeElements(children);\\n\\n    // COMPAT: ensure that all top-level inline nodes are wrapped into a block.\\n    nodes = nodes.reduce(function (memo, node, i, original) {\\n      if (node.object === 'block') {\\n        memo.push(node);\\n        return memo;\\n      }\\n\\n      if (i > 0 && original[i - 1].object !== 'block') {\\n        var _block = memo[memo.length - 1];\\n        _block.nodes.push(node);\\n        return memo;\\n      }\\n\\n      var block = _extends({\\n        object: 'block',\\n        data: {}\\n      }, defaultBlock, {\\n        nodes: [node]\\n      });\\n\\n      memo.push(block);\\n      return memo;\\n    }, []);\\n\\n    // TODO: pretty sure this is no longer needed.\\n    if (nodes.length === 0) {\\n      nodes = [_extends({\\n        object: 'block',\\n        data: {}\\n      }, defaultBlock, {\\n        nodes: [{\\n          object: 'text',\\n          text: '',\\n          marks: []\\n        }]\\n      })];\\n    }\\n\\n    var json = {\\n      object: 'value',\\n      document: {\\n        object: 'document',\\n        data: {},\\n        nodes: nodes\\n      }\\n    };\\n\\n    var ret = toJSON ? json : slate.Value.fromJSON(json);\\n    return ret;\\n  };\\n\\n  this.deserializeElements = function () {\\n    var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n    var nodes = [];\\n\\n    elements.filter(_this.cruftNewline).forEach(function (element) {\\n      var node = _this.deserializeElement(element);\\n\\n      switch (typeOf(node)) {\\n        case 'array':\\n          nodes = nodes.concat(node);\\n          break;\\n        case 'object':\\n          nodes.push(node);\\n          break;\\n      }\\n    });\\n\\n    return nodes;\\n  };\\n\\n  this.deserializeElement = function (element) {\\n    var node = void 0;\\n\\n    if (!element.tagName) {\\n      element.tagName = '';\\n    }\\n\\n    var next = function next(elements) {\\n      if (Object.prototype.toString.call(elements) === '[object NodeList]') {\\n        elements = Array.from(elements);\\n      }\\n\\n      switch (typeOf(elements)) {\\n        case 'array':\\n          return _this.deserializeElements(elements);\\n        case 'object':\\n          return _this.deserializeElement(elements);\\n        case 'null':\\n        case 'undefined':\\n          return;\\n        default:\\n          throw new Error('The `next` argument was called with invalid children: \\\"' + elements + '\\\".');\\n      }\\n    };\\n\\n    var _iteratorNormalCompletion = true;\\n    var _didIteratorError = false;\\n    var _iteratorError = undefined;\\n\\n    try {\\n      for (var _iterator = _this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n        var rule = _step.value;\\n\\n        if (!rule.deserialize) continue;\\n        var ret = rule.deserialize(element, next);\\n        var type = typeOf(ret);\\n\\n        if (type !== 'array' && type !== 'object' && type !== 'null' && type !== 'undefined') {\\n          throw new Error('A rule returned an invalid deserialized representation: \\\"' + node + '\\\".');\\n        }\\n\\n        if (ret === undefined) {\\n          continue;\\n        } else if (ret === null) {\\n          return null;\\n        } else if (ret.object === 'mark') {\\n          node = _this.deserializeMark(ret);\\n        } else {\\n          node = ret;\\n        }\\n\\n        if (node.object === 'block' || node.object === 'inline') {\\n          node.data = node.data || {};\\n          node.nodes = node.nodes || [];\\n        } else if (node.object === 'text') {\\n          node.marks = node.marks || [];\\n          node.text = node.text || '';\\n        }\\n\\n        break;\\n      }\\n    } catch (err) {\\n      _didIteratorError = true;\\n      _iteratorError = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion && _iterator.return) {\\n          _iterator.return();\\n        }\\n      } finally {\\n        if (_didIteratorError) {\\n          throw _iteratorError;\\n        }\\n      }\\n    }\\n\\n    return node || next(element.childNodes);\\n  };\\n\\n  this.deserializeMark = function (mark) {\\n    var type = mark.type,\\n        data = mark.data;\\n\\n\\n    var applyMark = function applyMark(node) {\\n      if (node.object === 'mark') {\\n        var ret = _this.deserializeMark(node);\\n        return ret;\\n      } else if (node.object === 'text') {\\n        node.marks = node.marks || [];\\n        node.marks.push({ type: type, data: data });\\n      } else if (node.nodes) {\\n        node.nodes = node.nodes.map(applyMark);\\n      }\\n\\n      return node;\\n    };\\n\\n    return mark.nodes.reduce(function (nodes, node) {\\n      var ret = applyMark(node);\\n      if (Array.isArray(ret)) return nodes.concat(ret);\\n      nodes.push(ret);\\n      return nodes;\\n    }, []);\\n  };\\n\\n  this.serialize = function (value) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    var document = value.document;\\n\\n    var elements = document.nodes.map(_this.serializeNode).filter(function (el) {\\n      return el;\\n    });\\n    if (options.render === false) return elements;\\n\\n    var html = server.renderToStaticMarkup(React.createElement(\\n      'body',\\n      null,\\n      elements\\n    ));\\n    var inner = html.slice(6, -7);\\n    return inner;\\n  };\\n\\n  this.serializeNode = function (node) {\\n    if (node.object === 'text') {\\n      var string = new String({ text: node.text });\\n      var text = _this.serializeString(string);\\n\\n      return node.marks.reduce(function (children, mark) {\\n        var _iteratorNormalCompletion2 = true;\\n        var _didIteratorError2 = false;\\n        var _iteratorError2 = undefined;\\n\\n        try {\\n          for (var _iterator2 = _this.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\\n            var rule = _step2.value;\\n\\n            if (!rule.serialize) continue;\\n            var ret = rule.serialize(mark, children);\\n            if (ret === null) return;\\n            if (ret) return addKey(ret);\\n          }\\n        } catch (err) {\\n          _didIteratorError2 = true;\\n          _iteratorError2 = err;\\n        } finally {\\n          try {\\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\\n              _iterator2.return();\\n            }\\n          } finally {\\n            if (_didIteratorError2) {\\n              throw _iteratorError2;\\n            }\\n          }\\n        }\\n\\n        throw new Error('No serializer defined for mark of type \\\"' + mark.type + '\\\".');\\n      }, text);\\n    }\\n\\n    var children = node.nodes.map(_this.serializeNode);\\n\\n    var _iteratorNormalCompletion3 = true;\\n    var _didIteratorError3 = false;\\n    var _iteratorError3 = undefined;\\n\\n    try {\\n      for (var _iterator3 = _this.rules[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\\n        var rule = _step3.value;\\n\\n        if (!rule.serialize) continue;\\n        var ret = rule.serialize(node, children);\\n        if (ret === null) return;\\n        if (ret) return addKey(ret);\\n      }\\n    } catch (err) {\\n      _didIteratorError3 = true;\\n      _iteratorError3 = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\\n          _iterator3.return();\\n        }\\n      } finally {\\n        if (_didIteratorError3) {\\n          throw _iteratorError3;\\n        }\\n      }\\n    }\\n\\n    throw new Error('No serializer defined for node of type \\\"' + node.type + '\\\".');\\n  };\\n\\n  this.serializeString = function (string) {\\n    var _iteratorNormalCompletion4 = true;\\n    var _didIteratorError4 = false;\\n    var _iteratorError4 = undefined;\\n\\n    try {\\n      for (var _iterator4 = _this.rules[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\\n        var rule = _step4.value;\\n\\n        if (!rule.serialize) continue;\\n        var ret = rule.serialize(string, string.text);\\n        if (ret) return ret;\\n      }\\n    } catch (err) {\\n      _didIteratorError4 = true;\\n      _iteratorError4 = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion4 && _iterator4.return) {\\n          _iterator4.return();\\n        }\\n      } finally {\\n        if (_didIteratorError4) {\\n          throw _iteratorError4;\\n        }\\n      }\\n    }\\n  };\\n\\n  this.cruftNewline = function (element) {\\n    return !(element.nodeName === '#text' && element.nodeValue === '\\\\n');\\n  };\\n};\\n\\nvar key = 0;\\n\\nfunction addKey(element) {\\n  return React.cloneElement(element, { key: key++ });\\n}\\n\\nexports.default = Html;\\n//# sourceMappingURL=slate-html-serializer.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopDefault\",\"ex\",\"defaultParseHtml\",\"html\",\"DOMParser\",\"Error\",\"parseFromString\",\"parsed\",\"body\",\"window\",\"document\",\"createElement\",\"Object\",\"defineProperty\",\"value\",\"React\",\"server\",\"typeOf\",\"slate\",\"immutable\",\"_extends\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"toConsumableArray\",\"arr\",\"Array\",\"isArray\",\"arr2\",\"from\",\"String\",\"Record\",\"object\",\"text\",\"TEXT_RULE\",\"deserialize\",\"el\",\"tagName\",\"toLowerCase\",\"marks\",\"nodeName\",\"nodeValue\",\"match\",\"serialize\",\"obj\",\"children\",\"split\",\"reduce\",\"array\",\"push\",\"_initialiseProps\",\"_this\",\"this.deserialize\",\"_options$toJSON\",\"toJSON\",\"options\",\"undefined\",\"defaultBlock\",\"parseHtml\",\"fragment\",\"childNodes\",\"nodes\",\"deserializeElements\",\"memo\",\"node\",\"original\",\"_block\",\"block\",\"data\",\"json\",\"ret\",\"Value\",\"fromJSON\",\"this.deserializeElements\",\"filter\",\"elements\",\"cruftNewline\",\"forEach\",\"element\",\"deserializeElement\",\"concat\",\"this.deserializeElement\",\"next\",\"toString\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"rules\",\"Symbol\",\"iterator\",\"_step\",\"done\",\"rule\",\"type\",\"deserializeMark\",\"err\",\"return\",\"this.deserializeMark\",\"mark\",\"applyMark\",\"map\",\"this.serialize\",\"serializeNode\",\"render\",\"renderToStaticMarkup\",\"slice\",\"inner\",\"this.serializeNode\",\"string\",\"serializeString\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_iterator2\",\"_step2\",\"cloneElement\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_iterator3\",\"_step3\",\"this.serializeString\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_iterator4\",\"_step4\",\"this.cruftNewline\",\"default\",\"Html\",\"instance\",\"TypeError\",\"_options$defaultBlock\",\"_options$parseHtml\",\"_options$rules\",\"Node\",\"createProperties\"]\n}\n"]